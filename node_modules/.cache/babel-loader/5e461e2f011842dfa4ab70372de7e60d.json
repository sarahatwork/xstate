{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"/Users/willbunting/Documents/Github/gznzc/pages/index.js\";\nimport React from \"react\";\nimport Router from \"next/router\";\nimport { Machine, assign } from \"xstate\";\nimport { useMachine } from \"@xstate/react\";\nimport { GlobalStateContext, GlobalDispatchContext } from \"../context/global\";\n\nfunction sleep(ms) {\n  return new _Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n}\n\nvar loginMachine = Machine({\n  id: \"login\",\n  initial: \"editing\",\n  context: {\n    username: \"\",\n    password: \"\",\n    error: null\n  },\n  states: {\n    editing: {\n      on: {\n        CHANGE_USERNAME: {\n          actions: \"changeUsername\"\n        },\n        CHANGE_PASSWORD: {\n          actions: \"changePassword\"\n        },\n        SUBMIT: \"submitting\"\n      }\n    },\n    submitting: {\n      invoke: {\n        src: \"submit\",\n        onDone: {\n          target: \"success\",\n          actions: \"setUserData\"\n        },\n        onError: {\n          target: \"failure\",\n          actions: \"setError\"\n        }\n      }\n    },\n    success: {\n      type: \"final\"\n    },\n    failure: {\n      on: {\n        CHANGE_USERNAME: {\n          actions: [\"changeUsername\", \"clearError\"]\n        },\n        CHANGE_PASSWORD: {\n          actions: [\"changePassword\", \"clearError\"]\n        }\n      }\n    }\n  }\n});\n\nvar HomePage = function HomePage() {\n  var globalState = React.useContext(GlobalStateContext);\n  var globalDispatch = React.useContext(GlobalDispatchContext);\n\n  var _useMachine = useMachine(loginMachine, {\n    actions: {\n      changeUsername: assign({\n        username: function username(_ctx, evt) {\n          return evt.value;\n        }\n      }),\n      changePassword: assign({\n        password: function password(_ctx, evt) {\n          return evt.value;\n        }\n      }),\n      setUserData: function setUserData(_ctx, evt) {\n        globalDispatch({\n          type: \"LOGIN\",\n          value: evt.data\n        });\n        Router.push(\"/dashboard\");\n      },\n      setError: assign({\n        error: function error(_ctx, evt) {\n          return evt.data;\n        }\n      }),\n      clearError: assign({\n        error: function error(_ctx, _evt) {\n          return null;\n        }\n      })\n    },\n    services: {\n      submit: function submit(_ctx, _evt) {\n        return new _Promise(\n        /*#__PURE__*/\n        function () {\n          var _ref = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(resolve, reject) {\n            var rand;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return sleep(2000);\n\n                  case 2:\n                    rand = Math.random();\n\n                    if (rand < 0.5) {\n                      reject(\"failed to log in\");\n                    } else {\n                      resolve(\"user secret data\");\n                    }\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x, _x2) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n    }\n  }),\n      _useMachine2 = _slicedToArray(_useMachine, 2),\n      current = _useMachine2[0],\n      send = _useMachine2[1];\n\n  var handleUsernameChange = function handleUsernameChange(e) {\n    send({\n      type: \"CHANGE_USERNAME\",\n      value: e.currentTarget.value\n    });\n  };\n\n  var handlePasswordChange = function handlePasswordChange(e) {\n    send({\n      type: \"CHANGE_PASSWORD\",\n      value: e.currentTarget.value\n    });\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    send({\n      type: \"SUBMIT\"\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Signin:\", React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: current.context.username,\n    onChange: handleUsernameChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: current.context.password,\n    onChange: handlePasswordChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Submit\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, current.context.error));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/willbunting/Documents/Github/gznzc/pages/index.js"],"names":["React","Router","Machine","assign","useMachine","GlobalStateContext","GlobalDispatchContext","sleep","ms","resolve","setTimeout","loginMachine","id","initial","context","username","password","error","states","editing","on","CHANGE_USERNAME","actions","CHANGE_PASSWORD","SUBMIT","submitting","invoke","src","onDone","target","onError","success","type","failure","HomePage","globalState","useContext","globalDispatch","changeUsername","_ctx","evt","value","changePassword","setUserData","data","push","setError","clearError","_evt","services","submit","reject","rand","Math","random","current","send","handleUsernameChange","e","currentTarget","handlePasswordChange","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Router from \"next/router\";\nimport { Machine, assign } from \"xstate\";\nimport { useMachine } from \"@xstate/react\";\n\nimport { GlobalStateContext, GlobalDispatchContext } from \"../context/global\";\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst loginMachine = Machine({\n  id: \"login\",\n  initial: \"editing\",\n  context: {\n    username: \"\",\n    password: \"\",\n    error: null\n  },\n  states: {\n    editing: {\n      on: {\n        CHANGE_USERNAME: {\n          actions: \"changeUsername\"\n        },\n        CHANGE_PASSWORD: {\n          actions: \"changePassword\"\n        },\n        SUBMIT: \"submitting\"\n      }\n    },\n    submitting: {\n      invoke: {\n        src: \"submit\",\n        onDone: {\n          target: \"success\",\n          actions: \"setUserData\"\n        },\n        onError: {\n          target: \"failure\",\n          actions: \"setError\"\n        }\n      }\n    },\n    success: {\n      type: \"final\"\n    },\n    failure: {\n      on: {\n        CHANGE_USERNAME: {\n          actions: [\"changeUsername\", \"clearError\"]\n        },\n        CHANGE_PASSWORD: {\n          actions: [\"changePassword\", \"clearError\"]\n        }\n      }\n    }\n  }\n});\n\nconst HomePage = () => {\n  const globalState = React.useContext(GlobalStateContext);\n  const globalDispatch = React.useContext(GlobalDispatchContext);\n  const [current, send] = useMachine(loginMachine, {\n    actions: {\n      changeUsername: assign({\n        username: (_ctx, evt) => evt.value\n      }),\n      changePassword: assign({\n        password: (_ctx, evt) => evt.value\n      }),\n      setUserData: (_ctx, evt) => {\n        globalDispatch({ type: \"LOGIN\", value: evt.data });\n        Router.push(\"/dashboard\");\n      },\n      setError: assign({\n        error: (_ctx, evt) => evt.data\n      }),\n      clearError: assign({\n        error: (_ctx, _evt) => null\n      })\n    },\n    services: {\n      submit: (_ctx, _evt) =>\n        new Promise(async (resolve, reject) => {\n          await sleep(2000);\n          const rand = Math.random();\n          if (rand < 0.5) {\n            reject(\"failed to log in\");\n          } else {\n            resolve(\"user secret data\");\n          }\n        })\n    }\n  });\n\n  const handleUsernameChange = e => {\n    send({ type: \"CHANGE_USERNAME\", value: e.currentTarget.value });\n  };\n\n  const handlePasswordChange = e => {\n    send({ type: \"CHANGE_PASSWORD\", value: e.currentTarget.value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    send({ type: \"SUBMIT\" });\n  };\n\n  return (\n    <div>\n      Signin:\n      <form onSubmit={handleSubmit}>\n        <input\n          value={current.context.username}\n          onChange={handleUsernameChange}\n        />\n        <input\n          value={current.context.password}\n          onChange={handlePasswordChange}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n      <div>{current.context.error}</div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}