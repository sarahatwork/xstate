{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/willbunting/Documents/Github/gznzc/context/global.js\";\nimport React from \"react\";\nimport { useMachine } from \"@xstate/react\";\nimport { Machine, assign } from \"xstate\";\nexport var GlobalStateContext = React.createContext();\nexport var GlobalDispatchContext = React.createContext();\nvar globalMachine = Machine({\n  id: \"global\",\n  initial: \"loggedOut\",\n  context: {\n    userData: null\n  },\n  states: {\n    loggedIn: {\n      on: {\n        LOGOUT: {\n          target: \"loggedOut\",\n          actions: \"clearUserData\"\n        }\n      }\n    },\n    loggedOut: {\n      on: {\n        LOGIN: {\n          target: \"loggedIn\",\n          actions: \"setUserData\"\n        }\n      }\n    }\n  }\n}, {\n  actions: {\n    clearUserData: assign({\n      userData: function userData(_ctx, _evt) {\n        return null;\n      }\n    }),\n    setUserData: assign({\n      userData: function userData(_ctx, evt) {\n        return evt.value;\n      }\n    })\n  }\n});\nexport var GlobalStateProvider = function GlobalStateProvider(_ref) {\n  var children = _ref.children;\n\n  var _useMachine = useMachine(globalMachine),\n      _useMachine2 = _slicedToArray(_useMachine, 2),\n      current = _useMachine2[0],\n      send = _useMachine2[1];\n\n  console.log(\"hi\");\n  return React.createElement(GlobalStateContext.Provider, {\n    value: current,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(GlobalDispatchContext.Provider, {\n    value: send,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, children));\n};","map":{"version":3,"sources":["/Users/willbunting/Documents/Github/gznzc/context/global.js"],"names":["React","useMachine","Machine","assign","GlobalStateContext","createContext","GlobalDispatchContext","globalMachine","id","initial","context","userData","states","loggedIn","on","LOGOUT","target","actions","loggedOut","LOGIN","clearUserData","_ctx","_evt","setUserData","evt","value","GlobalStateProvider","children","current","send","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,QAAhC;AAEA,OAAO,IAAMC,kBAAkB,GAAGJ,KAAK,CAACK,aAAN,EAA3B;AACP,OAAO,IAAMC,qBAAqB,GAAGN,KAAK,CAACK,aAAN,EAA9B;AAEP,IAAME,aAAa,GAAGL,OAAO,CAC3B;AACEM,EAAAA,EAAE,EAAE,QADN;AAEEC,EAAAA,OAAO,EAAE,WAFX;AAGEC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE;AADH,GAHX;AAMEC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,EAAE,EAAE;AACFC,QAAAA,MAAM,EAAE;AACNC,UAAAA,MAAM,EAAE,WADF;AAENC,UAAAA,OAAO,EAAE;AAFH;AADN;AADI,KADJ;AASNC,IAAAA,SAAS,EAAE;AACTJ,MAAAA,EAAE,EAAE;AACFK,QAAAA,KAAK,EAAE;AACLH,UAAAA,MAAM,EAAE,UADH;AAELC,UAAAA,OAAO,EAAE;AAFJ;AADL;AADK;AATL;AANV,CAD2B,EA0B3B;AACEA,EAAAA,OAAO,EAAE;AACPG,IAAAA,aAAa,EAAEjB,MAAM,CAAC;AACpBQ,MAAAA,QAAQ,EAAE,kBAACU,IAAD,EAAOC,IAAP;AAAA,eAAgB,IAAhB;AAAA;AADU,KAAD,CADd;AAIPC,IAAAA,WAAW,EAAEpB,MAAM,CAAC;AAClBQ,MAAAA,QAAQ,EAAE,kBAACU,IAAD,EAAOG,GAAP;AAAA,eAAeA,GAAG,CAACC,KAAnB;AAAA;AADQ,KAAD;AAJZ;AADX,CA1B2B,CAA7B;AAsCA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,oBAC3B1B,UAAU,CAACM,aAAD,CADiB;AAAA;AAAA,MAC5CqB,OAD4C;AAAA,MACnCC,IADmC;;AAGnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AAEA,SACE,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEH,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,qBAAD,CAAuB,QAAvB;AAAgC,IAAA,KAAK,EAAEC,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF,CADF;AAOD,CAZM","sourcesContent":["import React from \"react\";\nimport { useMachine } from \"@xstate/react\";\nimport { Machine, assign } from \"xstate\";\n\nexport const GlobalStateContext = React.createContext();\nexport const GlobalDispatchContext = React.createContext();\n\nconst globalMachine = Machine(\n  {\n    id: \"global\",\n    initial: \"loggedOut\",\n    context: {\n      userData: null\n    },\n    states: {\n      loggedIn: {\n        on: {\n          LOGOUT: {\n            target: \"loggedOut\",\n            actions: \"clearUserData\"\n          }\n        }\n      },\n      loggedOut: {\n        on: {\n          LOGIN: {\n            target: \"loggedIn\",\n            actions: \"setUserData\"\n          }\n        }\n      }\n    }\n  },\n  {\n    actions: {\n      clearUserData: assign({\n        userData: (_ctx, _evt) => null\n      }),\n      setUserData: assign({\n        userData: (_ctx, evt) => evt.value\n      })\n    }\n  }\n);\n\nexport const GlobalStateProvider = ({ children }) => {\n  const [current, send] = useMachine(globalMachine);\n\n  console.log(\"hi\");\n\n  return (\n    <GlobalStateContext.Provider value={current}>\n      <GlobalDispatchContext.Provider value={send}>\n        {children}\n      </GlobalDispatchContext.Provider>\n    </GlobalStateContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}