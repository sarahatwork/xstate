{"version":3,"file":"static/webpack/static/development/pages/index.js.57f2f9594a9310a11b18.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from \"react\";\nimport Router from \"next/router\";\nimport { Machine, assign } from \"xstate\";\nimport { useMachine } from \"@xstate/react\";\n\nimport { GlobalStateContext, GlobalDispatchContext } from \"../context/global\";\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst loginMachine = Machine({\n  id: \"login\",\n  initial: \"editing\",\n  context: {\n    username: \"\",\n    password: \"\",\n    error: null\n  },\n  states: {\n    editing: {\n      on: {\n        CHANGE_USERNAME: {\n          actions: \"changeUsername\"\n        },\n        CHANGE_PASSWORD: {\n          actions: \"changePassword\"\n        },\n        SUBMIT: \"submitting\"\n      }\n    },\n    submitting: {\n      invoke: {\n        src: \"submit\",\n        onDone: {\n          target: \"success\",\n          actions: \"setUserData\"\n        },\n        onError: {\n          target: \"failure\",\n          actions: \"setError\"\n        }\n      }\n    },\n    success: {\n      type: \"final\"\n    },\n    failure: {\n      on: {\n        CHANGE_USERNAME: {\n          actions: [\"changeUsername\", \"clearError\"]\n        },\n        CHANGE_PASSWORD: {\n          actions: [\"changePassword\", \"clearError\"]\n        }\n      }\n    }\n  }\n});\n\nconst HomePage = () => {\n  const globalState = React.useContext(GlobalStateContext);\n  const globalDispatch = React.useContext(GlobalDispatchContext);\n  const [current, send] = useMachine(loginMachine, {\n    actions: {\n      changeUsername: assign({\n        username: (_ctx, evt) => evt.value\n      }),\n      changePassword: assign({\n        password: (_ctx, evt) => evt.value\n      }),\n      setUserData: (_ctx, evt) => {\n        globalDispatch({ type: \"LOGIN\", value: evt.data });\n        Router.push(\"/dashboard\");\n      },\n      setError: assign({\n        error: (_ctx, evt) => evt.data\n      }),\n      clearError: assign({\n        error: (_ctx, _evt) => null\n      })\n    },\n    services: {\n      submit: (_ctx, _evt) =>\n        new Promise(async (resolve, reject) => {\n          await sleep(2000);\n          const rand = Math.random();\n          if (rand < 0.5) {\n            reject(\"failed to log in\");\n          } else {\n            resolve(\"user secret data\");\n          }\n        })\n    }\n  });\n\n  const handleUsernameChange = e => {\n    send({ type: \"CHANGE_USERNAME\", value: e.currentTarget.value });\n  };\n\n  const handlePasswordChange = e => {\n    send({ type: \"CHANGE_PASSWORD\", value: e.currentTarget.value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    send({ type: \"SUBMIT\" });\n  };\n\n  return (\n    <div>\n      Signin:\n      <form onSubmit={handleSubmit}>\n        <input\n          value={current.context.username}\n          onChange={handleUsernameChange}\n        />\n        <input\n          value={current.context.password}\n          onChange={handlePasswordChange}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n      <div>{current.context.error}</div>\n      {current.matches(\"submitting\") && <div>signing in...</div>}\n      {current.value}\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AAPA;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AANA;AADA;AAaA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AADA;AA5BA;AARA;AACA;AAgDA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AADA;AAdA;AAkBA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AADA;AAnBA;AAHA;AAAA;AAAA;AACA;AAmCA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}